{
  "weeks": {
    "1": {
      "title": "Week 1: Intro to Microcontrollers",
      "description": "Hardware, inputs/outputs, MakeCode basics, events & sequencing.",
      "questions": [
         {
         "question": "Which statement best describes the role of the microcontroller inside a micro:bit?",
         "type": "multiple-choice",
         "options": [
           "It processes sensor inputs and controls outputs according to your code",
           "It only stores your program in memory",
           "It powers the LEDs and buttons directly without processing",
           "It connects the micro:bit to the internet"
         ],
         "correct": 0,
         "explanation": "The microcontroller is the 'brain' — it runs your program, reading inputs and sending signals to outputs.",
         "definition": "MICROCONTROLLER — a small processor that executes code and manages inputs/outputs in embedded systems.",
         "difficulty": "medium",
         "hint": "Think of it as the part that actually runs your code and decides what to do next."
        },
        {
          "question": "Which of these is an INPUT on the micro:bit?",
          "type": "multiple-choice",
          "options": ["LED matrix", "Speaker", "Button A", "Buzzer"],
          "correct": 2,
          "explanation": "Buttons send signals INTO the micro:bit; LEDs/speakers send info OUT.",
          "definition": "INPUT — information that enters the device (e.g., buttons, sensors).",
          "difficulty": "easy",
          "hint": "Can a user press or move it to send a signal?"
        },
        {
          "question": "In the code below, which block ensures the text appears only one time before the heart starts flashing?",
          "type": "multiple-choice",
          "code": "on start\n  show string \"Hello!\"\nforever\n  show icon Heart\n  pause(500)\n  clear screen\n  pause(500)",
          "options": [
            "forever",
            "on start",
            "show string \"Hello!\"",
            "pause(500)"
          ],
          "correct": 1,
          "explanation": "Anything inside 'on start' runs just once. The 'forever' loop repeats endlessly, but 'on start' finishes after its commands.",
          "difficulty": "medium-hard",
          "hint": "Only one block type is designed for setup instructions that don’t repeat."
        },
        {
          "question": "If you upload this code to the micro:bit, what will you *see* happen and *why*?",
          "type": "multiple-choice",
          "code": "forever\n  show string \"Hi\"",
          "options": [
            "It scrolls 'Hi' endlessly because there’s no stop condition",
            "It only shows 'Hi' once because the display clears automatically",
            "It shows 'Hi' five times, matching the number of LEDs",
            "It waits for button A before showing 'Hi'"
          ],
          "correct": 0,
          "explanation": "Because the text is inside a 'forever' block, it repeats continuously without stopping until the micro:bit is reset or turned off.",
          "difficulty": "medium-hard",
          "hint": "Does anything in the code tell it to stop?"
        },
        {
          "question": "The LED grid on a micro:bit can both show light and measure light levels. What type of device is it *mostly* considered?",
          "type": "multiple-choice",
          "options": [
            "Both input and output, but mainly output",
            "Only an input device",
            "A storage device for variables",
            "A power source for sensors"
          ],
          "correct": 0,
          "explanation": "While the LED matrix can detect light levels, its primary role is to display information — so it’s mainly an output device.",
          "difficulty": "medium-hard",
          "hint": "It can sense light but that’s not its main purpose."
        },
        {
          "question": "Match each term to its definition.",
          "type": "drag-drop",
          "terms": ["Event", "Sequence", "Debug"],
          "definitions": ["Order of instructions", "Something that triggers code", "Find and fix errors"],
          "correctMatches": [1, 0, 2],
          "explanation": "Event triggers code; sequence is order; debug means fix mistakes.",
          "difficulty": "medium",
          "hint": "Cause → Event; order → Sequence; fixing → Debug."
        },
        {
          "question": "Where can you test your micro:bit program without using the real device?",
          "type": "multiple-choice",
          "options": [
            "In the MakeCode simulator on the screen",
            "By opening the MICROBIT drive on your computer",
            "By plugging in the battery pack only",
            "In the serial data window"
          ],
          "correct": 0,
          "explanation": "The MakeCode simulator runs your program virtually and lets you try buttons, shaking and LEDs on screen. The MICROBIT drive just stores files, the battery only powers the device, and the serial window only shows messages from a real one.",
          "definition": "SIMULATOR — a virtual version of the micro:bit you can test inside MakeCode.",
          "difficulty": "medium-hard",
          "hint": "Which one shows a working virtual micro:bit on your screen?"
        },
        {
          "question": "Which statement about 'on button A pressed' is TRUE?",
          "type": "multiple-choice",
          "options": ["It runs in a loop automatically", "It runs only when A is pressed", "It runs only at start", "It never runs"],
          "correct": 1,
          "explanation": "Event code runs when the event happens — here, pressing Button A.",
          "difficulty": "hard",
          "hint": "It waits for something to happen."
        },
        {
          "question": "What is a PROGRAM?",
          "type": "multiple-choice",
          "options": ["A single instruction", "Random blocks", "A set of instructions a computer follows", "An image on the LED matrix"],
          "correct": 2,
          "explanation": "A program is a precise sequence of instructions.",
          "definition": "PROGRAM — a precise list of instructions a computer follows.",
          "difficulty": "hard",
          "hint": "Think of a recipe for a computer."
        },
        {
          "question": "Why might your program NOT appear on the micro:bit after download?",
          "type": "multiple-choice",
          "options": ["Wrong cable (charge-only)", "Didn’t click Download", "Micro:bit not connected", "Any of these"],
          "correct": 3,
          "explanation": "All of these are common causes.",
          "difficulty": "hard",
          "hint": "Check the obvious steps and connections."
        },
        {
          "question": "Which example shows INPUT → PROCESS → OUTPUT in the correct order?",
          "type": "multiple-choice",
          "options": ["LED → add numbers → button", "Button → compare numbers → show icon", "Speaker → random → LED", "Battery → program → USB"],
          "correct": 1,
          "explanation": "Input (button) → processing/logic → output (display).",
          "difficulty": "hard",
          "hint": "First comes data in, then thinking, then feedback out."
        },
        {
          "question": "Which block would you use to run code continuously during the entire program?",
          "type": "multiple-choice",
          "options": ["on start", "on shake", "forever", "on button B pressed"],
          "correct": 2,
          "explanation": "The forever loop keeps running as long as the program runs.",
          "difficulty": "medium",
          "hint": "Think of a heartbeat the program always follows."
        }
      ]
    },
    "2": {
      "title": "Week 2: Events & Random",
      "description": "Button events, dice rolling, randomness, simple probability.",
      "questions": [
        {
          "question": "When does code inside 'on button A pressed' run?",
          "type": "multiple-choice",
          "options": ["On its own every second", "Only when A is pressed", "Only at the start", "When the device shakes"],
          "correct": 1,
          "explanation": "Event code runs when the specified event happens.",
          "difficulty": "easy",
          "hint": "It “listens” for a specific action."
        },
        {
          "question": "What does 'random 1 to 6' give you?",
          "type": "multiple-choice",
          "options": ["Always 6", "Always 1", "Any whole number from 1 to 6", "A decimal number"],
          "correct": 2,
          "explanation": "It behaves like a fair six-sided die.",
          "definition": "RANDOM — the computer chooses by chance from a range.",
          "difficulty": "easy",
          "hint": "Think dice."
        },
        {
          "question": "What is an EVENT in programming?",
          "type": "multiple-choice",
          "options": ["A type of sensor", "A mistake in code", "Something that triggers code to run", "A kind of loop"],
          "correct": 2,
          "explanation": "Events trigger code when they occur (press, shake, start).",
          "difficulty": "easy",
          "hint": "It’s the “when” that makes code start."
        },
        {
          "question": "This dice roller runs on Button A. What will it do?",
          "type": "multiple-choice",
          "code": "on button A pressed\n  set roll to random 1 to 6\n  show number roll",
          "options": ["Always shows 1", "Shows a random 1–6", "Shows two numbers", "Shows nothing"],
          "correct": 1,
          "explanation": "Each press generates and shows a single random die value.",
          "difficulty": "medium",
          "hint": "Follow the steps: press → pick → show."
        },
        {
          "question": "What is the chance of rolling a 4 on a fair six-sided die?",
          "type": "multiple-choice",
          "options": ["1 in 2", "1 in 4", "1 in 6", "1 in 10"],
          "correct": 2,
          "explanation": "Each face has equal probability: 1⁄6.",
          "difficulty": "medium",
          "hint": "How many faces are there?"
        },
        {
          "question": "If a die is rolled 60 times, about how many 3s would you expect?",
          "type": "multiple-choice",
          "options": ["About 5", "About 10", "About 20", "About 30"],
          "correct": 1,
          "explanation": "Expected frequency ≈ total × probability = 60 × 1⁄6 = 10.",
          "difficulty": "medium",
          "hint": "Multiply the number of trials by the chance."
        },
        {
          "question": "Which block lets you react to movement of the micro:bit?",
          "type": "multiple-choice",
          "options": ["on shake", "on start", "forever", "show number"],
          "correct": 0,
          "explanation": "The accelerometer triggers the shake event.",
          "difficulty": "medium",
          "hint": "It’s tied to the accelerometer."
        },
        {
          "question": "Match the event to when it triggers.",
          "type": "drag-drop",
          "terms": ["on start", "on button A pressed", "on shake", "forever"],
          "definitions": ["Runs when device turns on", "Runs when A is pressed", "Runs when moved/shaken", "Runs continuously"],
          "correctMatches": [0, 1, 2, 3],
          "explanation": "Each event maps to a different trigger; forever has no trigger.",
          "difficulty": "medium",
          "hint": "Think: beginning, button, motion, always."
        },
        {
          "question": "What gets shown when A is pressed?",
          "type": "multiple-choice",
          "code": "on button A pressed\n  set x to random 1..10\n  if x > 5 then\n    show string \"Big\"\n  else\n    show string \"Small\"",
          "options": ["Always 'Big'", "Always 'Small'", "'Big' if x is 6–10; otherwise 'Small'", "Nothing happens"],
          "correct": 2,
          "explanation": "The conditional splits 1..10 into two ranges: >5 and ≤5.",
          "difficulty": "hard",
          "hint": "Which numbers are greater than 5?"
        },
        {
          "question": "What is shown for this coin flip?",
          "type": "multiple-choice",
          "code": "on button B pressed\n  set flip to random 0..1\n  if flip = 0 then\n    show string \"Heads\"\n  else\n    show string \"Tails\"",
          "options": ["Heads only", "Tails only", "Heads or Tails (random)", "Error"],
          "correct": 2,
          "explanation": "Random 0..1 maps perfectly to a fair coin.",
          "difficulty": "hard",
          "hint": "Two possible values → two possible messages."
        },
        {
          "question": "Why might this show two different numbers quickly?",
          "type": "multiple-choice",
          "code": "on button A pressed\n  show number random 1..6\n  show number random 1..6",
          "options": ["It doesn’t pick randomly", "It picks two random numbers in a row", "The button is broken", "MakeCode can’t show numbers"],
          "correct": 1,
          "explanation": "It generates a fresh random value for each show.",
          "difficulty": "hard",
          "hint": "Count how many random calls happen."
        },
        {
          "question": "What will the code display?",
          "type": "multiple-choice",
          "code": "on start\n  set count to 0\non button A pressed\n  change count by 1\n  show number count",
          "options": ["Always 0", "1, then 2, then 3 as you press", "A random number", "Nothing"],
          "correct": 1,
          "explanation": "It increments and shows the running total of presses.",
          "difficulty": "hard",
          "hint": "Start value is 0; each press changes it."
        }
      ]
    },
    "3": {
      "title": "Week 3: Conditionals (If/Else)",
      "description": "Comparisons, branching, fairness. Rock–Paper–Scissors.",
      "questions": [
        {
          "question": "What does the ELSE part of an if–else do?",
          "type": "multiple-choice",
          "options": ["Runs when the IF is true", "Runs when the IF is false", "Runs always", "Never runs"],
          "correct": 1,
          "explanation": "ELSE handles the “otherwise” case when the IF condition isn’t met.",
          "difficulty": "easy",
          "hint": "Think: backup plan."
        },
        {
          "question": "Which symbol means “equal to” in comparisons?",
          "type": "multiple-choice",
          "options": [">", "<", "=", "≠"],
          "correct": 2,
          "explanation": "The = symbol checks equality in block conditions.",
          "difficulty": "easy",
          "hint": "Math class should ring a bell."
        },
        {
          "question": "In Rock–Paper–Scissors, which option beats Rock?",
          "type": "multiple-choice",
          "options": ["Scissors", "Paper", "Rock", "Nothing beats Rock"],
          "correct": 1,
          "explanation": "Paper covers rock.",
          "difficulty": "easy",
          "hint": "What covers a rock?"
        },
        {
          "question": "What message appears for x = 7?",
          "type": "multiple-choice",
          "code": "on button A pressed\n  set x to 7\n  if x > 5 then\n    show string \"Big\"\n  else\n    show string \"Small\"",
          "options": ["Big", "Small", "Both", "Nothing"],
          "correct": 0,
          "explanation": "7 > 5 is true, so it shows “Big”.",
          "difficulty": "medium",
          "hint": "Is 7 greater than 5?"
        },
        {
          "question": "What’s the output if number = 5?",
          "type": "multiple-choice",
          "code": "set number to 5\nif number < 5 then\n  show string \"Low\"\nelse if number = 5 then\n  show string \"Equal\"\nelse\n  show string \"High\"",
          "options": ["Low", "Equal", "High", "Nothing"],
          "correct": 1,
          "explanation": "The second condition matches exactly.",
          "difficulty": "medium",
          "hint": "Check the exact equality branch."
        },
        {
          "question": "If a coin is fair, what’s the chance of Heads?",
          "type": "multiple-choice",
          "options": ["1/2", "1/3", "1/6", "Depends on the day"],
          "correct": 0,
          "explanation": "A fair coin has two equally likely outcomes.",
          "difficulty": "medium",
          "hint": "How many equally likely outcomes are there?"
        },
        {
          "question": "Which condition correctly checks for a tie?",
          "type": "multiple-choice",
          "code": "set player to \"Rock\"\nset computer to \"Rock\"\nif ???? then\n  show string \"Tie!\"",
          "options": ["player ≠ computer", "player = computer", "computer = \"Paper\"", "player = \"Scissors\""],
          "correct": 1,
          "explanation": "A tie occurs when both choices are equal.",
          "difficulty": "medium",
          "hint": "Same on both sides."
        },
        {
          "question": "Match the comparison to an example that makes it TRUE.",
          "type": "drag-drop",
          "terms": ["x > 3", "x = 5", "x < 2", "x ≠ 4"],
          "definitions": ["x is 6", "x is 5", "x is 1", "x is 3"],
          "correctMatches": [0, 1, 2, 3],
          "explanation": "Each example satisfies the comparison shown.",
          "difficulty": "medium",
          "hint": "Plug in the numbers mentally."
        },
        {
          "question": "What does it show when A is pressed?",
          "type": "multiple-choice",
          "code": "on button A pressed\n  set roll to random 1..6\n  if roll = 6 then\n    show icon \"trophy\"\n  else\n    show number roll",
          "options": ["Always a trophy", "Always the number", "Trophy for 6; otherwise the number", "Nothing"],
          "correct": 2,
          "explanation": "It branches on a special case: a roll of 6.",
          "difficulty": "hard",
          "hint": "Which value triggers the special icon?"
        },
        {
          "question": "Which branch will execute?",
          "type": "multiple-choice",
          "code": "set a to 3\nset b to 7\nif a > b then\n  show string \"A\"\nelse if a = b then\n  show string \"Equal\"\nelse\n  show string \"B\"",
          "options": ["A", "Equal", "B", "Nothing"],
          "correct": 2,
          "explanation": "3 > 7 is false; 3 = 7 is false; it falls through to “B”.",
          "difficulty": "hard",
          "hint": "Compare 3 and 7 in order."
        },
        {
          "question": "Why can’t this ever show \"B\"?",
          "type": "multiple-choice",
          "code": "set n to 90\nif n >= 90 then\n  show string \"A\"\nelse if n >= 90 then\n  show string \"B\"\nelse\n  show string \"C\"",
          "options": ["Because the second condition repeats the first", "Because n isn’t a number", "Because else must come first", "Because >= doesn’t work"],
          "correct": 0,
          "explanation": "The second branch is unreachable since it duplicates the first condition.",
          "difficulty": "hard",
          "hint": "Look for a repeated test."
        },
        {
          "question": "What message appears when the code runs?",
          "type": "multiple-choice",
          "code": "set temp to 20\nset light to 30\nif temp >= 18 and light >= 50 then\n  show string \"Go Outside\"\nelse\n  show string \"Stay In\"",
          "options": ["Go Outside", "Stay In", "Both", "Nothing"],
          "correct": 1,
          "explanation": "Both conditions must be true; light is too low.",
          "difficulty": "hard",
          "hint": "AND means both must pass."
        }
      ]
    },
    "4": {
      "title": "Week 4: Variables & Thresholds",
      "description": "Storing values, comparing to limits, using sensors (light & temperature).",
      "questions": [
        {
          "question": "What is a VARIABLE?",
          "type": "multiple-choice",
          "options": ["A loop type", "A named box in memory to store a value", "A hardware sensor", "A sound effect"],
          "correct": 1,
          "explanation": "Variables store values that can change over time.",
          "difficulty": "easy",
          "hint": "Think: a labelled container for data."
        },
        {
          "question": "What does 'change score by 5' do if score was 10?",
          "type": "multiple-choice",
          "options": ["Sets it to 5", "Sets it to 10", "Sets it to 15", "Sets it to 50"],
          "correct": 2,
          "explanation": "It adds 5 to the current value: 10 + 5 = 15.",
          "difficulty": "easy",
          "hint": "This operation adds, it doesn’t replace."
        },
        {
          "question": "What is a THRESHOLD?",
          "type": "multiple-choice",
          "options": ["A boundary value used in comparisons", "A radio channel", "A sprite", "An error message"],
          "correct": 0,
          "explanation": "Thresholds are limits for decision-making (e.g., too dark/too cold).",
          "difficulty": "easy",
          "hint": "Think of a line you cross."
        },
        {
          "question": "What message will the code show when ran?",
          "type": "multiple-choice",
          "code": "set lightLevel to light level\nif lightLevel < 50 then\n  show string \"Too Dark!\"\nelse\n  show string \"OK\"",
          "options": ["Too Dark!", "OK", "Both", "Nothing"],
          "correct": 0,
          "explanation": "When the reading is below the threshold, it warns “Too Dark!”.",
          "difficulty": "medium",
          "hint": "Which side of 50 is the warning?"
        },
        {
          "question": "What is health after running?",
          "type": "multiple-choice",
          "code": "set health to 100\nchange health by -20\nset health to health * 2",
          "options": ["60", "80", "160", "200"],
          "correct": 2,
          "explanation": "100 - 20 = 80; 80 × 2 = 160.",
          "difficulty": "medium",
          "hint": "Apply steps in order."
        },
        {
          "question": "Match each variable operation to its effect.",
          "type": "drag-drop",
          "terms": ["set score to 10", "change score by 5", "set score to score + 1", "set score to 0"],
          "definitions": ["Makes score 10", "Adds 5 to score", "Adds 1 to score", "Resets score to 0"],
          "correctMatches": [0, 1, 2, 3],
          "explanation": "“set” replaces the value; “change by” adds/subtracts.",
          "difficulty": "medium",
          "hint": "Replace vs. add."
        },
        {
          "question": "What will display when temp = 35?",
          "type": "multiple-choice",
          "code": "set temp to temperature (onboard sensor)\nset threshold to 30\nif temp > threshold then\n  show string \"Too Hot!\"\nelse\n  show string \"OK\"",
          "options": ["Too Hot!", "OK", "35", "Nothing"],
          "correct": 0,
          "explanation": "35 > 30 is true, so it shows “Too Hot!”.",
          "difficulty": "medium",
          "hint": "Compare the numbers directly."
        },
        {
          "question": "Which code correctly stores the current light reading in a variable?",
          "type": "multiple-choice",
          "options": [
            "set light to light level",
            "set light to \"light level\"",
            "change light by light level",
            "set light to LED brightness"
          ],
          "correct": 0,
          "explanation": "Use the sensor reading to assign to a variable.",
          "difficulty": "medium",
          "hint": "You want the actual numeric reading."
        },
        {
          "question": "Where does the temperature value come from in micro:bit projects?",
          "type": "multiple-choice",
          "options": [
            "The onboard temperature sensor (micro:bit)",
            "An external sensor is mandatory",
            "The light sensor",
            "The USB cable"
          ],
          "correct": 0,
          "explanation": "For these activities we use the micro:bit’s onboard sensor.",
          "difficulty": "hard",
          "hint": "No extra hardware this week."
        },
        {
          "question": "Which comparison best fits a plant monitor?",
          "type": "multiple-choice",
          "code": "set temp to temperature (onboard)\nset light to light level\nif temp < 18 and light < 50 then\n  show string \"Cold & Dark\"\nelse if temp < 18 then\n  show string \"Cold\"\nelse if light < 50 then\n  show string \"Dark\"\nelse\n  show string \"Good\"",
          "options": [
            "Use only temp < 18",
            "Use only light < 50",
            "Use temp < 18 AND light < 50 for the combined warning",
            "Never use combined checks"
          ],
          "correct": 2,
          "explanation": "The first branch handles the combined case explicitly.",
          "difficulty": "hard",
          "hint": "Handle both low-light and low-temp together first."
        },
        {
          "question": "What’s the logic mistake?",
          "type": "multiple-choice",
          "code": "set temp to temperature\nif temp > 30 and temp > 40 then\n  show string \"Hot!\"\nelse\n  show string \"OK\"",
          "options": [
            "Nothing’s wrong",
            "It should use OR instead of AND",
            "The AND makes the first part redundant; it’s effectively temp > 40",
            "Use = instead of >"
          ],
          "correct": 2,
          "explanation": "If both are >, the larger threshold dominates; the first comparison is pointless.",
          "difficulty": "hard",
          "hint": "Which comparison is stricter?"
        },
        {
          "question": "What does the code display?",
          "type": "multiple-choice",
          "code": "set points to 10\nchange points by 15\nset points to points * 2\nshow number points",
          "options": ["25", "50", "35", "40"],
          "correct": 1,
          "explanation": "10 + 15 = 25; 25 × 2 = 50.",
          "difficulty": "hard",
          "hint": "Follow each step carefully."
        }
      ]
    },
    "5": {
      "title": "Week 5: Loops & First Game",
      "description": "repeat/for/while/forever loops; timing (millis); sprites and simple game logic.",
      "questions": [
        {
          "question": "What does a FOREVER loop do?",
          "type": "multiple-choice",
          "options": ["Runs once", "Runs a fixed number of times", "Keeps running continuously", "Never runs"],
          "correct": 2,
          "explanation": "It repeats as long as the program is active.",
          "difficulty": "easy",
          "hint": "Think: the main heartbeat of a game."
        },
        {
          "question": "What does 'repeat 3 times' do?",
          "type": "multiple-choice",
          "options": ["Runs forever", "Runs exactly 3 times", "Runs randomly", "Runs until a condition is met"],
          "correct": 1,
          "explanation": "It iterates a fixed number of times.",
          "difficulty": "easy",
          "hint": "Count the passes."
        },
        {
          "question": "What is an ITERATION?",
          "type": "multiple-choice",
          "options": ["A type of sprite", "One pass through the loop", "A kind of bug", "A timing unit"],
          "correct": 1,
          "explanation": "Each cycle of a loop is an iteration.",
          "difficulty": "easy",
          "hint": "Imagine stepping through a dance routine once."
        },
        {
          "question": "What does the pattern produce?",
          "type": "multiple-choice",
          "code": "forever\n  repeat 5 times\n    show icon \"heart\"\n    pause 200\n    show icon \"small heart\"\n    pause 200\n  clear screen\n  pause 800",
          "options": [
            "A single heart that never changes",
            "Five heartbeats, then a short pause, repeating",
            "Random icons",
            "Nothing shows"
          ],
          "correct": 1,
          "explanation": "The inner repeat creates pulses; the outer forever repeats the cycle.",
          "difficulty": "medium",
          "hint": "Look at the alternation and pauses."
        },
        {
          "question": "What numbers will be shown?",
          "type": "multiple-choice",
          "code": "set counter to 1\nrepeat 5 times\n  show number counter\n  change counter by 1\n  pause 500",
          "options": ["1,2,3,4,5", "0,1,2,3,4", "5,4,3,2,1", "Always 1"],
          "correct": 0,
          "explanation": "It starts at 1 and increments after each display.",
          "difficulty": "medium",
          "hint": "Check the starting value."
        },
        {
          "question": "What does using 'millis' (elapsed ms) help with?",
          "type": "multiple-choice",
          "options": [
            "Drawing sprites only",
            "Measuring time between actions for smooth speed control",
            "Changing the screen size",
            "Fixing syntax errors"
          ],
          "correct": 1,
          "explanation": "millis (or elapsed ms) lets you time updates precisely (e.g., speed).",
          "difficulty": "medium",
          "hint": "Think: timers and intervals."
        },
        {
          "question": "What movement happens?",
          "type": "multiple-choice",
          "code": "set x to 0\nrepeat 4 times\n  change x by 1\n  pause 150",
          "options": [
            "Moves left 4 steps",
            "Moves right 4 steps",
            "Does not move",
            "Teleports randomly"
          ],
          "correct": 1,
          "explanation": "Increasing x shifts position rightward in a 5×5 grid.",
          "difficulty": "medium",
          "hint": "Positive change to x means which direction?"
        },
        {
          "question": "Match loop type to its description.",
          "type": "drag-drop",
          "terms": ["forever", "repeat N times", "while (condition)", "for index 1..N"],
          "definitions": [
            "Never stops, main game loop",
            "Runs a fixed count",
            "Runs while a test is true",
            "Counts through a range"
          ],
          "correctMatches": [0, 1, 2, 3],
          "explanation": "Each loop fits a distinct use case.",
          "difficulty": "medium",
          "hint": "Always/Exactly/While/Counting."
        },
        {
          "question": "How many times will it run?",
          "type": "multiple-choice",
          "code": "set c to 10\nwhile c > 5\n  show number c\n  change c by -2",
          "options": ["2 times", "3 times", "5 times", "Forever"],
          "correct": 1,
          "explanation": "c takes values 10, 8, 6 then stops (3 passes).",
          "difficulty": "hard",
          "hint": "Track c step by step."
        },
        {
          "question": "This loop controls part of a game timer:\n\n```\nset counter to 9\nwhile counter > 0\n    if counter % 2 = 0 then\n        change counter by -2\n    pause 100\n```\nWhat will happen when this runs?",
          "type": "multiple-choice",
          "code": "set counter to 9\nwhile counter > 0\n    if counter % 2 = 0 then\n        change counter by -2\n    pause 100",
          "options": [
            "It counts down to 0 and stops.",
            "It becomes an infinite loop and never ends.",
            "It runs exactly 5 times then stops.",
            "It throws an error because % is not allowed."
          ],
          "correct": 1,
          "explanation": "The loop starts with counter = 9 (odd). The only place counter changes is inside the IF for even numbers. Since 9 is odd, the IF never runs, counter never changes, and the WHILE condition stays true forever — an infinite loop.",
          "hint": "Look carefully: when does the counter actually change? What happens if it starts odd?",
          "difficulty": "hard"
        },
        {
          "question": "What is printed at the end?",
          "type": "multiple-choice",
          "code": "set s to 0\nfor i from 1 to 4\n  change s by i\nshow number s",
          "options": ["4", "6", "10", "12"],
          "correct": 2,
          "explanation": "1+2+3+4 = 10.",
          "difficulty": "hard",
          "hint": "Add the range 1..4."
        },
        {
          "question": "What pattern of beeps will you hear?",
          "type": "multiple-choice",
          "code": "set wait to 600\nrepeat 3 times\n  play tone C\n  pause wait\n  change wait by -200",
          "options": [
            "Three beeps with equal spacing",
            "Three beeps with decreasing spacing (faster each time)",
            "One long continuous beep",
            "Beep only once"
          ],
          "correct": 1,
          "explanation": "The pause shrinks each iteration, so beeps come quicker.",
          "difficulty": "hard",
          "hint": "Watch the pause value change."
        }
      ]
    }
  }
}
