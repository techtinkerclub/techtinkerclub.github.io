{
  "weeks": {
    "1": {
      "title": "Week 1: Intro to Microcontrollers",
      "description": "Hardware, inputs/outputs, MakeCode basics, events & sequencing.",
      "questions": [
         {
         "question": "Which statement best describes the role of the microcontroller inside a micro:bit?",
         "type": "multiple-choice",
         "options": [
           "It processes sensor inputs and controls outputs according to your code",
           "It only stores your program in memory",
           "It powers the LEDs and buttons directly without processing",
           "It connects the micro:bit to the internet"
         ],
         "correct": 0,
         "explanation": "The microcontroller is the 'brain' — it runs your program, reading inputs and sending signals to outputs.",
         "definition": "MICROCONTROLLER — a small processor that executes code and manages inputs/outputs in embedded systems.",
         "difficulty": "medium",
         "hint": "Think of it as the part that actually runs your code and decides what to do next."
        },
        {
          "question": "Which of these is an INPUT on the micro:bit?",
          "type": "multiple-choice",
          "options": ["LED matrix", "Speaker", "Button A", "Buzzer"],
          "correct": 2,
          "explanation": "Buttons send signals INTO the micro:bit; LEDs/speakers send info OUT.",
          "definition": "INPUT — information that enters the device (e.g., buttons, sensors).",
          "difficulty": "easy",
          "hint": "Can a user press or move it to send a signal?"
        },
        {
          "question": "In the code below, which block ensures the text appears only one time before the heart starts flashing?",
          "type": "multiple-choice",
          "code": "on start\n  show string \"Hello!\"\nforever\n  show icon Heart\n  pause(500)\n  clear screen\n  pause(500)",
          "options": [
            "forever",
            "on start",
            "show string \"Hello!\"",
            "pause(500)"
          ],
          "correct": 1,
          "explanation": "Anything inside 'on start' runs just once. The 'forever' loop repeats endlessly, but 'on start' finishes after its commands.",
          "difficulty": "medium-hard",
          "hint": "Only one block type is designed for setup instructions that don’t repeat."
        },
        {
          "question": "If you upload this code to the micro:bit, what will you *see* happen and *why*?",
          "type": "multiple-choice",
          "code": "forever\n  show string \"Hi\"",
          "options": [
            "It scrolls 'Hi' endlessly because there’s no stop condition",
            "It only shows 'Hi' once because the display clears automatically",
            "It shows 'Hi' five times, matching the number of LEDs",
            "It waits for button A before showing 'Hi'"
          ],
          "correct": 0,
          "explanation": "Because the text is inside a 'forever' block, it repeats continuously without stopping until the micro:bit is reset or turned off.",
          "difficulty": "medium-hard",
          "hint": "Does anything in the code tell it to stop?"
        },
        {
          "question": "The LED grid on a micro:bit can both show light and measure light levels. What type of device is it *mostly* considered?",
          "type": "multiple-choice",
          "options": [
            "Both input and output, but mainly output",
            "Only an input device",
            "A storage device for variables",
            "A power source for sensors"
          ],
          "correct": 0,
          "explanation": "While the LED matrix can detect light levels, its primary role is to display information — so it’s mainly an output device.",
          "difficulty": "medium-hard",
          "hint": "It can sense light but that’s not its main purpose."
        },
        {
          "question": "Match each term to its definition.",
          "type": "drag-drop",
          "terms": ["Event", "Sequence", "Debug"],
          "definitions": ["Order of instructions", "Something that triggers code", "Find and fix errors"],
          "correctMatches": [1, 0, 2],
          "explanation": "Event triggers code; sequence is order; debug means fix mistakes.",
          "difficulty": "medium",
          "hint": "Cause → Event; order → Sequence; fixing → Debug."
        },
        {
          "question": "Where can you test your micro:bit program without using the real device?",
          "type": "multiple-choice",
          "options": [
            "In the MakeCode simulator on the screen",
            "By opening the MICROBIT drive on your computer",
            "By plugging in the battery pack only",
            "In the serial data window"
          ],
          "correct": 0,
          "explanation": "The MakeCode simulator runs your program virtually and lets you try buttons, shaking and LEDs on screen. The MICROBIT drive just stores files, the battery only powers the device, and the serial window only shows messages from a real one.",
          "definition": "SIMULATOR — a virtual version of the micro:bit you can test inside MakeCode.",
          "difficulty": "medium-hard",
          "hint": "Which one shows a working virtual micro:bit on your screen?"
        },
        {
          "question": "Which statement about 'on button A pressed' is TRUE?",
          "type": "multiple-choice",
          "options": ["It runs in a loop automatically", "It runs only when A is pressed", "It runs only at start", "It never runs"],
          "correct": 1,
          "explanation": "Event code runs when the event happens — here, pressing Button A.",
          "difficulty": "hard",
          "hint": "It waits for something to happen."
        },
        {
          "question": "What is a PROGRAM?",
          "type": "multiple-choice",
          "options": ["A single instruction", "Random blocks", "A set of instructions a computer follows", "An image on the LED matrix"],
          "correct": 2,
          "explanation": "A program is a precise sequence of instructions.",
          "definition": "PROGRAM — a precise list of instructions a computer follows.",
          "difficulty": "hard",
          "hint": "Think of a recipe for a computer."
        },
        {
          "question": "Why might your program NOT appear on the micro:bit after download?",
          "type": "multiple-choice",
          "options": ["Wrong cable (charge-only)", "Didn’t click Download", "Micro:bit not connected", "Any of these"],
          "correct": 3,
          "explanation": "All of these are common causes.",
          "difficulty": "hard",
          "hint": "Check the obvious steps and connections."
        },
        {
          "question": "Which example shows INPUT → PROCESS → OUTPUT in the correct order?",
          "type": "multiple-choice",
          "options": ["LED → add numbers → button", "Button → compare numbers → show icon", "Speaker → random → LED", "Battery → program → USB"],
          "correct": 1,
          "explanation": "Input (button) → processing/logic → output (display).",
          "difficulty": "hard",
          "hint": "First comes data in, then thinking, then feedback out."
        },
        {
          "question": "Which block would you use to run code continuously during the entire program?",
          "type": "multiple-choice",
          "options": ["on start", "on shake", "forever", "on button B pressed"],
          "correct": 2,
          "explanation": "The forever loop keeps running as long as the program runs.",
          "difficulty": "medium",
          "hint": "Think of a heartbeat the program always follows."
        }
      ]
    },
    "2": {
      "title": "Week 2: Events & Random",
      "description": "Button events, dice rolling, randomness, simple probability.",
      "questions": [
       {
          "question": "When does the code inside the block 'on button A pressed' actually run?",
          "type": "multiple-choice",
          "options": [
            "Whenever any button is pressed",
            "Only when button A is pressed down",
            "Every few seconds automatically",
            "When button A is released"
          ],
          "correct": 1,
          "explanation": "The code runs only when button A is pressed down. Other buttons or automatic timing don’t trigger it.",
          "difficulty": "medium",
          "hint": "It listens for one exact action on one button."
        },
        {
          "question": "What does 'random 1 to 6' give you?",
          "type": "multiple-choice",
          "options": ["Always 6", "Always 1", "Any whole number from 1 to 6", "A decimal number"],
          "correct": 2,
          "explanation": "It behaves like a fair six-sided die.",
          "definition": "RANDOM — the computer chooses by chance from a range.",
          "difficulty": "easy",
          "hint": "Think dice."
        },
        {
          "question": "What is an EVENT in programming?",
          "type": "multiple-choice",
          "options": ["A type of sensor", "A mistake in code", "Something that triggers code to run", "A kind of loop"],
          "correct": 2,
          "explanation": "Events trigger code when they occur (press, shake, start).",
          "difficulty": "easy",
          "hint": "It’s the “when” that makes code start."
        },
        {
          "question": "This dice roller runs when you press Button A. What happens each time you press it?",
          "type": "multiple-choice",
          "code": "on button A pressed\n  set roll to random 1 to 6\n  show number roll",
          "options": [
            "It picks a new number from 1 to 6 and shows it",
            "It keeps showing the same number every time",
            "It adds 1 to the previous roll and shows that",
            "It shows all six numbers quickly one after another"
          ],
          "correct": 0,
          "explanation": "Each button A press sets a new random value between 1 and 6, then displays that single number.",
          "difficulty": "medium-hard",
          "hint": "Think about what the 'random 1 to 6' block does on *each* button press."
        },
        {
          "question": "What is the chance of rolling a 4 on a fair six-sided die?",
          "type": "multiple-choice",
          "options": ["1 in 2", "1 in 4", "1 in 6", "1 in 10"],
          "correct": 2,
          "explanation": "Each face has equal probability: 1⁄6.",
          "difficulty": "medium",
          "hint": "How many faces are there?"
        },
        {
          "question": "If a die is rolled 60 times, about how many 3s would you expect?",
          "type": "multiple-choice",
          "options": ["About 5", "About 10", "About 20", "About 30"],
          "correct": 1,
          "explanation": "Expected frequency ≈ total × probability = 60 × 1⁄6 = 10.",
          "difficulty": "medium",
          "hint": "Multiply the number of trials by the chance."
        },
        {
          "question": "Which block lets you react to movement of the micro:bit?",
          "type": "multiple-choice",
          "options": ["on shake", "on start", "forever", "show number"],
          "correct": 0,
          "explanation": "The accelerometer triggers the shake event.",
          "difficulty": "medium",
          "hint": "It’s tied to the accelerometer."
        },
        {
          "question": "Match the event to when it triggers.",
          "type": "drag-drop",
          "terms": ["on start", "on button A pressed", "on shake", "forever"],
          "definitions": ["Runs when device turns on", "Runs when A is pressed", "Runs when moved", "Runs continuously"],
          "correctMatches": [0, 1, 2, 3],
          "explanation": "Each event maps to a different trigger; forever has no trigger.",
          "difficulty": "medium",
          "hint": "Think: beginning, button, motion, always."
        },
        {
          "question": "What message might the micro:bit show when you press Button A?",
          "type": "multiple-choice",
          "code": "on button A pressed\n  set x to random 1..10\n  if x > 5 then\n    show string \"Big\"\n  else\n    show string \"Small\"",
          "options": [
            "It shows 'Big' or 'Small' depending on the random number",
            "It always shows 'Big' because 10 is the largest number",
            "It shows 'Small' because x starts at 0",
            "It shows both 'Big' and 'Small' one after another"
          ],
          "correct": 0,
          "explanation": "Each time you press A, a random number 1–10 is picked. If that number is greater than 5, 'Big' appears; otherwise 'Small'.",
          "difficulty": "medium-hard",
          "hint": "Remember: '>' means greater than."
        },
        {
          "question": "What is shown for this coin flip?",
          "type": "multiple-choice",
          "code": "on button B pressed\n  set flip to random 0..1\n  if flip = 0 then\n    show string \"Heads\"\n  else\n    show string \"Tails\"",
          "options": ["Heads only", "Tails only", "Heads or Tails", "Error"],
          "correct": 2,
          "explanation": "Random 0..1 maps perfectly to a fair coin.",
          "difficulty": "hard",
          "hint": "Two possible values → two possible messages."
        },
        {
          "question": "When this code runs, you sometimes see two different numbers flash quickly. Why?",
          "type": "multiple-choice",
          "code": "on button A pressed\n  show number random 1..6\n  show number random 1..6",
          "options": [
            "Because each call to 'random 1..6' generates a new value right away",
            "Because the same random value is shown twice at high speed",
            "Because the micro:bit remembers the first number and repeats it",
            "Because the button is pressed for too long"
          ],
          "correct": 0,
          "explanation": "Both lines use 'random 1..6', so two independent random numbers are shown in quick succession. It’s not caused by the button or timing.",
          "difficulty": "hard",
          "hint": "Does the code reuse the first random value or call it again?"
        },
        {
          "question": "After pressing Button A five times, what number will the micro:bit show, and why?",
          "type": "multiple-choice",
          "code": "on start\n  set count to 0\non button A pressed\n  change count by 1\n  show number count",
          "options": [
            "5, because 'count' increases by 1 each time and keeps its value",
            "1, because 'count' resets to 0 on every press",
            "A random number between 1 and 5",
            "0, because the program only runs 'on start'"
          ],
          "correct": 0,
          "explanation": "The variable 'count' is stored in memory, so it keeps increasing — 1, 2, 3, 4, 5 — with each press.",
          "difficulty": "hard",
          "hint": "Does 'set count to 0' happen each time you press the button?"
        }
      ]
    },
    "3": {
      "title": "Week 3: Conditionals (If/Else)",
      "description": "Comparisons, branching, fairness. Rock–Paper–Scissors.",
      "questions": [
        {
          "question": "What does the ELSE part of an if–else do?",
          "type": "multiple-choice",
          "options": ["Runs when the IF is true", "Runs when the IF is false", "Runs always", "Never runs"],
          "correct": 1,
          "explanation": "ELSE handles the “otherwise” case when the IF condition isn’t met.",
          "difficulty": "easy",
          "hint": "Think: backup plan."
        },
        {
          "question": "Look at this code. Which symbol is checking if the score is exactly 10?",
          "type": "multiple-choice",
          "code": "if score = 10 then\n  show string \"Winner!\"",
          "options": [
            ">",
            "<",
            "=",
            "≠"
          ],
          "correct": 2,
          "explanation": "The '=' sign in the condition tests whether the variable 'score' is equal to 10. If so, it shows 'Winner!'.",
          "difficulty": "hard",
          "hint": "It compares, not adds — like asking 'are they the same?'"
        },
        {
          "question": "The micro:bit picks a random number 1..3 to play Rock–Paper–Scissors. What must the code do next to decide who wins?",
          "type": "multiple-choice",
          "options": [
            "Use if–else blocks to compare your choice and the random pick",
            "Use 'show string' to display all three options at once",
            "Add 3 to the random number to get the winner",
            "Wait 1 second before showing a smiley"
          ],
          "correct": 0,
          "explanation": "After choosing randomly, the program must compare both choices using if–else logic to decide who wins.",
          "difficulty": "medium-hard",
          "hint": "How does the program *decide* which move wins?"
        },
        {
          "question": "What message appears for x = 7?",
          "type": "multiple-choice",
          "code": "on button A pressed\n  set x to 7\n  if x > 5 then\n    show string \"Big\"\n  else\n    show string \"Small\"",
          "options": ["Big", "Small", "Both", "Nothing"],
          "correct": 0,
          "explanation": "7 > 5 is true, so it shows “Big”.",
          "difficulty": "medium",
          "hint": "Is 7 greater than 5?"
        },
        {
          "question": "What’s the output if number = 5?",
          "type": "multiple-choice",
          "code": "set number to 5\nif number < 5 then\n  show string \"Low\"\nelse if number = 5 then\n  show string \"Equal\"\nelse\n  show string \"High\"",
          "options": ["Low", "Equal", "High", "Nothing"],
          "correct": 1,
          "explanation": "The second condition matches exactly.",
          "difficulty": "medium",
          "hint": "Check the exact equality branch."
        },
        {
          "question": "If a coin is fair, what’s the chance of Heads?",
          "type": "multiple-choice",
          "options": ["1/2", "1/3", "1/6", "Depends on the day"],
          "correct": 0,
          "explanation": "A fair coin has two equally likely outcomes.",
          "difficulty": "medium",
          "hint": "How many equally likely outcomes are there?"
        },
        {
          "question": "Which condition correctly checks for a tie?",
          "type": "multiple-choice",
          "code": "set player to \"Rock\"\nset computer to \"Rock\"\nif ???? then\n  show string \"Tie!\"",
          "options": ["player ≠ computer", "player = computer", "computer = \"Paper\"", "player = \"Scissors\""],
          "correct": 1,
          "explanation": "A tie occurs when both choices are equal.",
          "difficulty": "medium",
          "hint": "Same on both sides."
        },
        {
          "question": "Match the comparison to an example that makes it TRUE.",
          "type": "drag-drop",
          "terms": ["x > 3", "x = 5", "x < 2", "x ≠ 4"],
          "definitions": ["x is 6", "x is 5", "x is 1", "x is 3"],
          "correctMatches": [0, 1, 2, 3],
          "explanation": "Each example satisfies the comparison shown.",
          "difficulty": "medium",
          "hint": "Plug in the numbers mentally."
        },
        {
          "question": "What does it show when A is pressed?",
          "type": "multiple-choice",
          "code": "on button A pressed\n  set roll to random 1..6\n  if roll = 6 then\n    show icon \"trophy\"\n  else\n    show number roll",
          "options": ["Always a trophy", "Always the number", "Trophy for 6; otherwise the number", "Nothing"],
          "correct": 2,
          "explanation": "It branches on a special case: a roll of 6.",
          "difficulty": "hard",
          "hint": "Which value triggers the special icon?"
        },
        {
          "question": "What will the display show?",
          "type": "multiple-choice",
          "code": "set a to 3\nset b to 7\nif a > b then\n  show string \"A\"\nelse if a = b then\n  show string \"Equal\"\nelse\n  show string \"B\"",
          "options": ["A", "Equal", "B", "Nothing"],
          "correct": 2,
          "explanation": "3 > 7 is false; 3 = 7 is false; it falls through to “B”.",
          "difficulty": "hard",
          "hint": "Compare 3 and 7 in order."
        },
        {
          "question": "Why can’t this ever show \"B\"?",
          "type": "multiple-choice",
          "code": "set n to 90\nif n >= 90 then\n  show string \"A\"\nelse if n >= 90 then\n  show string \"B\"\nelse\n  show string \"C\"",
          "options": ["Because the second condition repeats the first", "Because n isn’t a number", "Because else must come first", "Because >= doesn’t work"],
          "correct": 0,
          "explanation": "The second branch is unreachable since it duplicates the first condition.",
          "difficulty": "hard",
          "hint": "Look for a repeated test."
        },
        {
          "question": "What message appears when the code runs?",
          "type": "multiple-choice",
          "code": "set temp to 20\nset light to 30\nif temp >= 18 and light >= 50 then\n  show string \"Go Outside\"\nelse\n  show string \"Stay In\"",
          "options": ["Go Outside", "Stay In", "Both", "Nothing"],
          "correct": 1,
          "explanation": "Both conditions must be true; light is too low.",
          "difficulty": "hard",
          "hint": "AND means both must pass."
        }
      ]
    },
    "4": {
      "title": "Week 4: Variables & Thresholds",
      "description": "Storing values, comparing to limits, using sensors (light & temperature).",
      "questions": [
        {
          "question": "What is a VARIABLE used for in MakeCode?",
          "type": "multiple-choice",
          "options": [
            "To store a value that can change while the program runs",
            "To repeat blocks over and over",
            "To read values from sensors like light or temperature",
            "To play sounds or show icons"
          ],
          "correct": 0,
          "explanation": "A variable is a named space in memory where the program keeps a value that can change, such as a score or sensor reading.",
          "difficulty": "medium",
          "hint": "It’s like a labelled box you can open and replace what’s inside."
        },
        {
          "question": "What does 'change score by 5' do if score was 10?",
          "type": "multiple-choice",
          "options": ["Sets it to 5", "Sets it to 10", "Sets it to 15", "Sets it to 50"],
          "correct": 2,
          "explanation": "It adds 5 to the current value: 10 + 5 = 15.",
          "difficulty": "easy",
          "hint": "This operation adds, it doesn’t replace."
        },
        {
          "question": "In a micro:bit program, what does a THRESHOLD represent?",
          "type": "multiple-choice",
          "options": [
            "A limit value that decides when something should happen",
            "The exact sensor reading at the start of the program",
            "A random number between two limits",
            "The highest possible temperature the micro:bit can read"
          ],
          "correct": 0,
          "explanation": "A threshold is a boundary value used to trigger an action — for example, if light level < 100, turn on a torch.",
          "difficulty": "medium",
          "hint": "It’s the line between 'go' and 'stop' conditions."
        },
        {
          "question": "If the classroom light level is 80, what message appears when this code runs?",
          "type": "multiple-choice",
          "code": "set lightLevel to light level\nif lightLevel < 50 then\n  show string \"Too Dark!\"\nelse\n  show string \"OK\"",
          "options": [
            "\"Too Dark!\" because 80 is still low",
            "\"OK\" because 80 is higher than the threshold",
            "\"Too Dark!\" and then \"OK\"",
            "It shows nothing because light level never changes"
          ],
          "correct": 1,
          "explanation": "The condition 'lightLevel < 50' is false when lightLevel = 80, so the program runs the 'else' branch and shows 'OK'.",
          "difficulty": "hard",
          "hint": "Which branch runs when the condition is false?"
        },
        {
          "question": "What is health after running?",
          "type": "multiple-choice",
          "code": "set health to 100\nchange health by -20\nset health to health * 2",
          "options": ["60", "80", "160", "200"],
          "correct": 2,
          "explanation": "100 - 20 = 80; 80 × 2 = 160.",
          "difficulty": "medium",
          "hint": "Apply steps in order."
        },
        {
          "question": "Match each variable operation to its effect.",
          "type": "drag-drop",
          "terms": ["set score to 10", "change score by 5", "set score to score + 1", "set score to 0"],
          "definitions": ["Makes score 10", "Adds 5 to score", "Adds 1 to score", "Resets score to 0"],
          "correctMatches": [0, 1, 2, 3],
          "explanation": "“set” replaces the value; “change by” adds/subtracts.",
          "difficulty": "medium",
          "hint": "Replace vs. add."
        },
        {
          "question": "What will display when temp = 35?",
          "type": "multiple-choice",
          "code": "set temp to temperature (onboard sensor)\nset threshold to 30\nif temp > threshold then\n  show string \"Too Hot!\"\nelse\n  show string \"OK\"",
          "options": ["Too Hot!", "OK", "35", "Nothing"],
          "correct": 0,
          "explanation": "35 > 30 is true, so it shows “Too Hot!”.",
          "difficulty": "medium",
          "hint": "Compare the numbers directly."
        },
        {
          "question": "Which code correctly stores the current light sensor reading into a variable?",
          "type": "multiple-choice",
          "options": [
            "set light to light level",
            "set light to 50",
            "set light to 'Light'",
            "set light to temperature"
          ],
          "correct": 0,
          "explanation": "The command 'set light to light level' copies the sensor’s current reading into the variable called 'light'. The others either use fixed numbers or the wrong sensor.",
          "difficulty": "medium-hard",
          "hint": "Only one uses the actual light sensor reading, not a constant or a different input."
        },
        {
          "question": "Where does the temperature value come from in micro:bit projects?",
          "type": "multiple-choice",
          "options": [
            "The onboard temperature sensor",
            "An external sensor is mandatory",
            "The light sensor",
            "The USB cable"
          ],
          "correct": 0,
          "explanation": "For these activities we use the micro:bit’s onboard sensor.",
          "difficulty": "hard",
          "hint": "No extra hardware this week."
        },
        {
          "question": "You want your plant monitor to warn only when it’s cold AND dark. Which line should fill the blank?",
          "type": "multiple-choice",
          "code": "set temp to temperature (onboard)\nset light to light level (onboard)\nif __________ then\n  show string \"Cold & Dark\"",
          "options": [
            "temp < 18",
            "light < 50",
            "temp < 18 AND light < 50",
            "temp < 18 OR light < 50"
          ],
          "correct": 2,
          "explanation": "Using AND means both the temperature and the light readings must be below their thresholds for the warning to appear.",
          "difficulty": "hard",
          "hint": "Which condition checks that both sensors are below their limits?"
        },
        {
          "question": "What’s the logic mistake?",
          "type": "multiple-choice",
          "code": "set temp to temperature\nif temp > 30 and temp > 40 then\n  show string \"Hot!\"\nelse\n  show string \"OK\"",
          "options": [
            "Nothing’s wrong",
            "It should use OR instead of AND",
            "The AND makes the first part redundant; it’s effectively temp > 40",
            "Use = instead of >"
          ],
          "correct": 2,
          "explanation": "If both are >, the larger threshold dominates; the first comparison is pointless.",
          "difficulty": "hard",
          "hint": "Which comparison is stricter?"
        },
        {
          "question": "What does the code display?",
          "type": "multiple-choice",
          "code": "set points to 10\nchange points by 15\nset points to points * 2\nshow number points",
          "options": ["25", "50", "35", "40"],
          "correct": 1,
          "explanation": "10 + 15 = 25; 25 × 2 = 50.",
          "difficulty": "hard",
          "hint": "Follow each step carefully."
        }
      ]
    },
    "5": {
      "title": "Week 5: Loops & First Game",
      "description": "repeat/for/while/forever loops; timing (millis); sprites and simple game logic.",
      "questions": [
        {
          "question": "What does a FOREVER loop do?",
          "type": "multiple-choice",
          "options": ["Runs once", "Runs a fixed number of times", "Keeps running continuously", "Never runs"],
          "correct": 2,
          "explanation": "It repeats as long as the program is active.",
          "difficulty": "easy",
          "hint": "Think: the main heartbeat of a game."
        },
        {
          "question": "What does 'repeat 3 times' do?",
          "type": "multiple-choice",
          "options": ["Runs forever", "Runs exactly 3 times", "Runs randomly", "Runs until a condition is met"],
          "correct": 1,
          "explanation": "It iterates a fixed number of times.",
          "difficulty": "easy",
          "hint": "Count the passes."
        },
        {
          "question": "What is an ITERATION?",
          "type": "multiple-choice",
          "options": ["A type of sprite", "One pass through the loop", "A kind of bug", "A timing unit"],
          "correct": 1,
          "explanation": "Each cycle of a loop is an iteration.",
          "difficulty": "easy",
          "hint": "Imagine stepping through a dance routine once."
        },
        {
          "question": "What will this code make the micro:bit do?",
          "type": "multiple-choice",
          "code": "forever\n  repeat 5 times\n    show icon \"heart\"\n    pause 200\n    show icon \"small heart\"\n    pause 200\n  clear screen\n  pause 800",
          "options": [
            "Show one heart that never changes",
            "Show five heartbeats, then pause briefly, repeating forever",
            "Show a random sequence of icons",
            "Show five hearts once and then stop"
          ],
          "correct": 1,
          "explanation": "The inner 'repeat 5 times' loop creates five quick heartbeats, then the outer 'forever' loop makes the pattern repeat endlessly with a short rest in between.",
          "difficulty": "medium-hard",
          "hint": "Think about how the 'repeat 5 times' works inside the 'forever' loop."
        },
        {
          "question": "What numbers will be shown?",
          "type": "multiple-choice",
          "code": "set counter to 1\nrepeat 5 times\n  show number counter\n  change counter by 1\n  pause 500",
          "options": ["1,2,3,4,5", "0,1,2,3,4", "5,4,3,2,1", "Always 1"],
          "correct": 0,
          "explanation": "It starts at 1 and increments after each display.",
          "difficulty": "medium",
          "hint": "Check the starting value."
        },
        {
          "question": "What does using 'millis' (elapsed ms) help with?",
          "type": "multiple-choice",
          "options": [
            "Drawing sprites only",
            "Measuring time between actions for smooth speed control",
            "Changing the screen size",
            "Fixing syntax errors"
          ],
          "correct": 1,
          "explanation": "millis (or elapsed ms) lets you time updates precisely (e.g., speed).",
          "difficulty": "medium",
          "hint": "Think: timers and intervals."
        },
        {
          "question": "What movement happens on the LED screen?",
          "type": "multiple-choice",
          "code": "set sprite to create sprite at x 0 y 2\nrepeat 4 times\n  change sprite x by 1\n  pause 150",
          "options": [
            "Moves left 4 steps",
            "Moves right 4 steps",
            "Does not move",
            "Teleports randomly"
          ],
          "correct": 1,
          "explanation": "Changing the sprite’s x by +1 four times moves it 4 columns to the right.",
          "difficulty": "medium-hard",
          "hint": "Positive x goes right; negative x goes left."
        },
        {
          "question": "Match each loop type to what it does in a program.",
          "type": "drag-drop",
          "terms": ["forever", "repeat N times", "while (condition)", "for index 1..N"],
          "definitions": [
            "Repeats a specific number of times, then stops",
            "Steps through numbers in order, useful for counting or indexing",
            "Keeps running endlessly while the program is active",
            "Repeats as long as a test remains true"
          ],
          "correctMatches": [2, 0, 3, 1],
          "explanation": "‘forever’ never ends, ‘repeat N times’ runs a fixed count, ‘while’ depends on a condition, and ‘for’ iterates through a sequence of values.",
          "difficulty": "medium-hard",
          "hint": "Think: endless / fixed / condition / counting."
        },
        {
          "question": "How many times will it run?",
          "type": "multiple-choice",
          "code": "set c to 10\nwhile c > 5\n  show number c\n  change c by -2",
          "options": ["2 times", "3 times", "5 times", "Forever"],
          "correct": 1,
          "explanation": "c takes values 10, 8, 6 then stops (3 passes).",
          "difficulty": "hard",
          "hint": "Track c step by step."
        },
        {
          "question": "This loop is part of a game timer. What happens when the code runs?",
          "type": "multiple-choice",
          "code": "set counter to 9\nwhile counter > 0\n    if counter < 0 then\n        change counter by -1\n    pause 100",
          "options": [
            "It counts down to 0 and stops",
            "It becomes an infinite loop and never ends",
            "It runs exactly 9 times then stops",
            "It crashes immediately"
          ],
          "correct": 1,
          "explanation": "The WHILE loop keeps running while counter > 0, but the IF condition inside only runs when counter < 0, which never happens. So the counter never changes, and the loop never ends.",
          "hint": "Does the IF condition ever become true?",
          "difficulty": "hard"
        },
        {
          "question": "What is printed at the end?",
          "type": "multiple-choice",
          "code": "set s to 0\nfor i from 1 to 4\n  change s by i\nshow number s",
          "options": ["4", "6", "10", "12"],
          "correct": 2,
          "explanation": "1+2+3+4 = 10.",
          "difficulty": "hard",
          "hint": "Add the range 1..4."
        },
        {
          "question": "What pattern of beeps will you hear?",
          "type": "multiple-choice",
          "code": "set wait to 600\nrepeat 3 times\n  play tone C\n  pause wait\n  change wait by -200",
          "options": [
            "Three beeps with equal spacing",
            "Three beeps, faster each time",
            "One long continuous beep",
            "Beep only once"
          ],
          "correct": 1,
          "explanation": "The pause shrinks each iteration, so beeps come quicker.",
          "difficulty": "hard",
          "hint": "Watch the pause value change."
          
        }
      ]
    }
  
  {
  "week": 6,
  "title": "Barrel Jumper — Basics",
  "unlocked": false,
  "unlock_after": 5,
  "questions": [
    {
      "id": "w6-q1",
      "question": "Which block repeats a group of instructions forever?",
      "type": "multiple-choice",
      "options": [
        "`repeat 4 times`",
        "`pause (100) ms`",
        "`forever`",
        "`on button B pressed`"
      ],
      "correct": 2,
      "explanation": "The `forever` block keeps running while the program is active. It’s commonly used as a game loop.",
      "difficulty": "easy",
      "hint": "Which block never stops unless the program ends?"
    },
    {
      "id": "w6-q2",
      "question": "Why do we use a `pause` block inside loops?",
      "type": "multiple-choice",
      "options": [
        "To stop the program completely",
        "To slow movement/animation so we can see it",
        "To make LEDs brighter",
        "To save the score"
      ],
      "correct": 1,
      "explanation": "Pauses control timing so movement/animation is visible and not too fast.",
      "difficulty": "easy",
      "hint": "Think about speed and timing."
    },
    {
      "id": "w6-q3",
      "question": "On the micro:bit grid, what does the x value control?",
      "type": "multiple-choice",
      "options": [
        "Up and down position",
        "Left and right position",
        "Brightness",
        "Speed"
      ],
      "correct": 1,
      "explanation": "x is left–right (0 = left edge, 4 = right edge). y is up–down.",
      "difficulty": "easy",
      "hint": "x-axis is horizontal."
    },
    {
      "id": "w6-q4",
      "question": "Which block creates a new sprite at a chosen position?",
      "type": "multiple-choice",
      "options": [
        "`move by 1`",
        "`create sprite at x: 0 y: 4`",
        "`plot x y`",
        "`if on edge, bounce`"
      ],
      "correct": 1,
      "explanation": "`create sprite` makes a controllable object at the given coordinates.",
      "difficulty": "easy",
      "hint": "Look for the word ‘create’."
    },
    {
      "id": "w6-q5",
      "question": "What does this code do?",
      "type": "multiple-choice",
      "code": "barrel move by 1\\nbarrel if on edge, bounce",
      "options": [
        "Moves the barrel and stops at the wall",
        "Moves the barrel back and forth across the screen",
        "Draws a bouncing ball picture",
        "Makes the jumper sprite jump"
      ],
      "correct": 1,
      "explanation": "The barrel steps one LED each time and reverses direction at the edges.",
      "difficulty": "medium",
      "hint": "Bounce means reverse direction at an edge."
    },
    {
      "id": "w6-q6",
      "question": "When should the score increase in Barrel Jumper?",
      "type": "multiple-choice",
      "options": [
        "When the jumper touches the barrel",
        "Every time the barrel reaches the left edge (x = 0)",
        "Every time the jumper jumps",
        "When the game starts"
      ],
      "correct": 1,
      "explanation": "We increment score when the barrel’s x position is 0 (left edge).",
      "difficulty": "medium",
      "hint": "We check the barrel’s x coordinate."
    },
    {
      "id": "w6-q7",
      "question": "What triggers a game over?",
      "type": "multiple-choice",
      "options": [
        "The score is high",
        "The jumper moves off the grid",
        "The jumper touches the barrel",
        "The barrel bounces three times"
      ],
      "correct": 2,
      "explanation": "Collision (touching) between jumper and barrel ends the game.",
      "difficulty": "easy",
      "hint": "Think ‘collision detection’."
    },
    {
      "id": "w6-q8",
      "question": "Debugging: the jumper doesn’t move when B is pressed. Most likely cause?",
      "type": "multiple-choice",
      "code": "on button B pressed\\n    repeat 4 times\\n        jumper change y by -1\\n        pause (100) ms\\n    repeat 4 times\\n        jumper change y by +1\\n        pause (100) ms",
      "options": [
        "The repeats are outside the button event",
        "The barrel is too fast",
        "The speed variable is too small",
        "Battery is low"
      ],
      "correct": 0,
      "explanation": "The jump code must be inside the `on button B pressed` event to run on button press.",
      "difficulty": "medium",
      "hint": "Check where the code lives."
    }
    }
  ]
}


